---
import { Icon } from "astro-icon/components";
import { themes } from "../constants/themes";
---

<header class="flex justify-between items-center">
  <div>
    <label for="my-drawer" class="btn btn-ghost btn-square drawer-button">
      <Icon name={"lucide:menu"} class="text-xl" />
    </label>
  </div>
  <div>
    <div class="dropdown dropdown-left">
      <div tabindex="0" role="button" class="btn btn-ghost btn-square size-8">
        <Icon name="lucide:palette" class={"text-xl"} />
        <!-- <Icon name="lucide:chevron-down" /> -->
        <!-- <svg
          width="12px"
          height="12px"
          class="inline-block h-2 w-2 fill-current opacity-60"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 2048 2048"
        >
          <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"
          ></path>
        </svg> -->
      </div>
      <ul
        tabindex="0"
        class="dropdown-content bg-base-300 rounded-box z-1 w-52 p-2 shadow-2xl"
      >
        {
          themes.map((theme) => (
            <li>
              <input
                type="radio"
                name="theme-dropdown"
                class="theme-controller w-full btn btn-sm  btn-ghost justify-start"
                aria-label={theme}
                value={theme}
              />
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</header>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    // --- Your existing theme setup code ---
    const radios = document.querySelectorAll('input[name="theme-dropdown"]');
    const currentTheme = localStorage.getItem("theme");

    if (currentTheme) {
      radios.forEach((radio) => {
        if (radio.value === currentTheme) {
          radio.checked = true;
        }
      });
    }

    radios.forEach((radio) => {
      radio.addEventListener("change", (e) => {
        const selectedTheme = e.target.value;
        localStorage.setItem("theme", selectedTheme);
        document.documentElement.setAttribute("data-theme", selectedTheme);
      });
    });
  });

  // You had this stubbed â€” no need unless drawer logic needed
  (function () {
    const drawerToggle = document.querySelector(".drawer-icon");
    drawerToggle?.addEventListener("change", (e) => {
      const checkbox = document.querySelector("#my-drawer");
      // Implement drawer toggle logic if needed
    });
  })();
</script>
